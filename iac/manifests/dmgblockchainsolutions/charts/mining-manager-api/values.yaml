# Default values for mining-manager-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# These values are populated from the hidden parent values.yaml
postgres:
  database: nil
  host: nil
  user: nil
  password: nil
  port: nil

image:
  repository: 976193228961.dkr.ecr.us-east-1.amazonaws.com/dmgblockchaindevops-api
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "7b90a9e"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

# 1001 is the expressjs user
securityContext:
  runAsNonRoot: true
  runAsUser: 1001

service:
  type: ClusterIP
  port: 3001

ingress:
  enabled: false

# Rough estimate, using kubectl top pod.
resources:
  limits:
    cpu: 400m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

livenessProbe:
  httpGet:
    path: /api/v1
    port: http
readinessProbe:
  httpGet:
    path: /api/v1
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
